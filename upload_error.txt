Row 1: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0odn40000um80vzrkywmk", sectionNumber: "1", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "1", sectionName: "Input Customer Information", displayName: "Input Customer Information", displayOrder: 1, isActive: true, phaseId: "cmei0odn40000um80vzrkywmk" }, create: { sectionNumber: "1", sectionName: "Input Customer Information", displayName: "Input Customer Information", displayOrder: 1, isActive: true, phaseId: "cmei0odn40000um80vzrkywmk" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 2: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0odn40000um80vzrkywmk", sectionNumber: "2", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "2", sectionName: "Complete Questions to Ask Checklist", displayName: "Complete Questions to Ask Checklist", displayOrder: 2, isActive: true, phaseId: "cmei0odn40000um80vzrkywmk" }, create: { sectionNumber: "2", sectionName: "Complete Questions to Ask Checklist", displayName: "Complete Questions to Ask Checklist", displayOrder: 2, isActive: true, phaseId: "cmei0odn40000um80vzrkywmk" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 3: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0odn40000um80vzrkywmk", sectionNumber: "3", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "3", sectionName: "Input Lead Supporting Property Information", displayName: "Input Lead Supporting Property Information", displayOrder: 3, isActive: true, phaseId: "cmei0odn40000um80vzrkywmk" }, create: { sectionNumber: "3", sectionName: "Input Lead Supporting Property Information", displayName: "Input Lead Supporting Property Information", displayOrder: 3, isActive: true, phaseId: "cmei0odn40000um80vzrkywmk" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 4: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0odn40000um80vzrkywmk", sectionNumber: "4", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "4", sectionName: "Assign A Project Manager", displayName: "Assign A Project Manager", displayOrder: 4, isActive: true, phaseId: "cmei0odn40000um80vzrkywmk" }, create: { sectionNumber: "4", sectionName: "Assign A Project Manager", displayName: "Assign A Project Manager", displayOrder: 4, isActive: true, phaseId: "cmei0odn40000um80vzrkywmk" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 5: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0odn40000um80vzrkywmk", sectionNumber: "5", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "5", sectionName: "Schedule Initial Inspection", displayName: "Schedule Initial Inspection", displayOrder: 5, isActive: true, phaseId: "cmei0odn40000um80vzrkywmk" }, create: { sectionNumber: "5", sectionName: "Schedule Initial Inspection", displayName: "Schedule Initial Inspection", displayOrder: 5, isActive: true, phaseId: "cmei0odn40000um80vzrkywmk" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 6: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0oeag000vum808b6fw160", sectionNumber: "6", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "6", sectionName: "Site Inspection", displayName: "Site Inspection", displayOrder: 1, isActive: true, phaseId: "cmei0oeag000vum808b6fw160" }, create: { sectionNumber: "6", sectionName: "Site Inspection", displayName: "Site Inspection", displayOrder: 1, isActive: true, phaseId: "cmei0oeag000vum808b6fw160" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 7: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0oeag000vum808b6fw160", sectionNumber: "7", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "7", sectionName: "Write Estimate", displayName: "Write Estimate", displayOrder: 2, isActive: true, phaseId: "cmei0oeag000vum808b6fw160" }, create: { sectionNumber: "7", sectionName: "Write Estimate", displayName: "Write Estimate", displayOrder: 2, isActive: true, phaseId: "cmei0oeag000vum808b6fw160" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 8: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0oeag000vum808b6fw160", sectionNumber: "8", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "8", sectionName: "Insurance Process", displayName: "Insurance Process", displayOrder: 3, isActive: true, phaseId: "cmei0oeag000vum808b6fw160" }, create: { sectionNumber: "8", sectionName: "Insurance Process", displayName: "Insurance Process", displayOrder: 3, isActive: true, phaseId: "cmei0oeag000vum808b6fw160" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 9: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0oeag000vum808b6fw160", sectionNumber: "9", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "9", sectionName: "Agreement Preparation", displayName: "Agreement Preparation", displayOrder: 4, isActive: true, phaseId: "cmei0oeag000vum808b6fw160" }, create: { sectionNumber: "9", sectionName: "Agreement Preparation", displayName: "Agreement Preparation", displayOrder: 4, isActive: true, phaseId: "cmei0oeag000vum808b6fw160" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 10: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0oeag000vum808b6fw160", sectionNumber: "10", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "10", sectionName: "Agreement Signing", displayName: "Agreement Signing", displayOrder: 5, isActive: true, phaseId: "cmei0oeag000vum808b6fw160" }, create: { sectionNumber: "10", sectionName: "Agreement Signing", displayName: "Agreement Signing", displayOrder: 5, isActive: true, phaseId: "cmei0oeag000vum808b6fw160" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 11: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0oem9001eum806rmmxk9f", sectionNumber: "11", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "11", sectionName: "Administrative Setup", displayName: "Administrative Setup", displayOrder: 1, isActive: true, phaseId: "cmei0oem9001eum806rmmxk9f" }, create: { sectionNumber: "11", sectionName: "Administrative Setup", displayName: "Administrative Setup", displayOrder: 1, isActive: true, phaseId: "cmei0oem9001eum806rmmxk9f" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 12: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0oem9001eum806rmmxk9f", sectionNumber: "12", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "12", sectionName: "Pre-Job Actions", displayName: "Pre-Job Actions", displayOrder: 2, isActive: true, phaseId: "cmei0oem9001eum806rmmxk9f" }, create: { sectionNumber: "12", sectionName: "Pre-Job Actions", displayName: "Pre-Job Actions", displayOrder: 2, isActive: true, phaseId: "cmei0oem9001eum806rmmxk9f" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 13: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0oem9001eum806rmmxk9f", sectionNumber: "13", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "13", sectionName: "Prepare for Production", displayName: "Prepare for Production", displayOrder: 3, isActive: true, phaseId: "cmei0oem9001eum806rmmxk9f" }, create: { sectionNumber: "13", sectionName: "Prepare for Production", displayName: "Prepare for Production", displayOrder: 3, isActive: true, phaseId: "cmei0oem9001eum806rmmxk9f" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 14: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0oem9001eum806rmmxk9f", sectionNumber: "14", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "14", sectionName: "Verify Labor Order in Scheduler", displayName: "Verify Labor Order in Scheduler", displayOrder: 4, isActive: true, phaseId: "cmei0oem9001eum806rmmxk9f" }, create: { sectionNumber: "14", sectionName: "Verify Labor Order in Scheduler", displayName: "Verify Labor Order in Scheduler", displayOrder: 4, isActive: true, phaseId: "cmei0oem9001eum806rmmxk9f" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 15: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0oem9001eum806rmmxk9f", sectionNumber: "15", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "15", sectionName: "Verify Material Orders", displayName: "Verify Material Orders", displayOrder: 5, isActive: true, phaseId: "cmei0oem9001eum806rmmxk9f" }, create: { sectionNumber: "15", sectionName: "Verify Material Orders", displayName: "Verify Material Orders", displayOrder: 5, isActive: true, phaseId: "cmei0oem9001eum806rmmxk9f" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 16: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0oem9001eum806rmmxk9f", sectionNumber: "16", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "16", sectionName: "If trade is for subcontractor", displayName: "If trade is for subcontractor", displayOrder: 6, isActive: true, phaseId: "cmei0oem9001eum806rmmxk9f" }, create: { sectionNumber: "16", sectionName: "If trade is for subcontractor", displayName: "If trade is for subcontractor", displayOrder: 6, isActive: true, phaseId: "cmei0oem9001eum806rmmxk9f" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 17: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0oem9001eum806rmmxk9f", sectionNumber: "17", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "17", sectionName: "Does the job have paint?", displayName: "Does the job have paint?", displayOrder: 7, isActive: true, phaseId: "cmei0oem9001eum806rmmxk9f" }, create: { sectionNumber: "17", sectionName: "Does the job have paint?", displayName: "Does the job have paint?", displayOrder: 7, isActive: true, phaseId: "cmei0oem9001eum806rmmxk9f" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 18: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0of300025um80wo00ru8r", sectionNumber: "18", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "18", sectionName: "Installation Process", displayName: "Installation Process", displayOrder: 1, isActive: true, phaseId: "cmei0of300025um80wo00ru8r" }, create: { sectionNumber: "18", sectionName: "Installation Process", displayName: "Installation Process", displayOrder: 1, isActive: true, phaseId: "cmei0of300025um80wo00ru8r" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 19: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0of300025um80wo00ru8r", sectionNumber: "19", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "19", sectionName: "Monitor progress", displayName: "Monitor progress", displayOrder: 2, isActive: true, phaseId: "cmei0of300025um80wo00ru8r" }, create: { sectionNumber: "19", sectionName: "Monitor progress", displayName: "Monitor progress", displayOrder: 2, isActive: true, phaseId: "cmei0of300025um80wo00ru8r" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 20: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0of300025um80wo00ru8r", sectionNumber: "20", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "20", sectionName: "Quality Check", displayName: "Quality Check", displayOrder: 3, isActive: true, phaseId: "cmei0of300025um80wo00ru8r" }, create: { sectionNumber: "20", sectionName: "Quality Check", displayName: "Quality Check", displayOrder: 3, isActive: true, phaseId: "cmei0of300025um80wo00ru8r" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 21: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0of300025um80wo00ru8r", sectionNumber: "21", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "21", sectionName: "If Doing Multiple Trades", displayName: "If Doing Multiple Trades", displayOrder: 4, isActive: true, phaseId: "cmei0of300025um80wo00ru8r" }, create: { sectionNumber: "21", sectionName: "If Doing Multiple Trades", displayName: "If Doing Multiple Trades", displayOrder: 4, isActive: true, phaseId: "cmei0of300025um80wo00ru8r" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 22: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0of300025um80wo00ru8r", sectionNumber: "22", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "22", sectionName: "If doing Subcontractor work", displayName: "If doing Subcontractor work", displayOrder: 5, isActive: true, phaseId: "cmei0of300025um80wo00ru8r" }, create: { sectionNumber: "22", sectionName: "If doing Subcontractor work", displayName: "If doing Subcontractor work", displayOrder: 5, isActive: true, phaseId: "cmei0of300025um80wo00ru8r" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 23: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0of300025um80wo00ru8r", sectionNumber: "23", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "23", sectionName: "Update Customer", displayName: "Update Customer", displayOrder: 6, isActive: true, phaseId: "cmei0of300025um80wo00ru8r" }, create: { sectionNumber: "23", sectionName: "Update Customer", displayName: "Update Customer", displayOrder: 6, isActive: true, phaseId: "cmei0of300025um80wo00ru8r" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 24: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0ofl5002yum806067ffg2", sectionNumber: "24", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "24", sectionName: "Create Supp in Xactimate for Insurance", displayName: "Create Supp in Xactimate for Insurance", displayOrder: 1, isActive: true, phaseId: "cmei0ofl5002yum806067ffg2" }, create: { sectionNumber: "24", sectionName: "Create Supp in Xactimate for Insurance", displayName: "Create Supp in Xactimate for Insurance", displayOrder: 1, isActive: true, phaseId: "cmei0ofl5002yum806067ffg2" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 25: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0ofl5002yum806067ffg2", sectionNumber: "25", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "25", sectionName: "Call on the Supp submission twice a week", displayName: "Call on the Supp submission twice a week", displayOrder: 2, isActive: true, phaseId: "cmei0ofl5002yum806067ffg2" }, create: { sectionNumber: "25", sectionName: "Call on the Supp submission twice a week", displayName: "Call on the Supp submission twice a week", displayOrder: 2, isActive: true, phaseId: "cmei0ofl5002yum806067ffg2" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 26: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0ofl5002yum806067ffg2", sectionNumber: "26", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "26", sectionName: "Review Approved Items in Supp After Receiving it", displayName: "Review Approved Items in Supp After Receiving it", displayOrder: 3, isActive: true, phaseId: "cmei0ofl5002yum806067ffg2" }, create: { sectionNumber: "26", sectionName: "Review Approved Items in Supp After Receiving it", displayName: "Review Approved Items in Supp After Receiving it", displayOrder: 3, isActive: true, phaseId: "cmei0ofl5002yum806067ffg2" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 27: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0ofl5002yum806067ffg2", sectionNumber: "27", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "27", sectionName: "Update Customer", displayName: "Update Customer", displayOrder: 4, isActive: true, phaseId: "cmei0ofl5002yum806067ffg2" }, create: { sectionNumber: "27", sectionName: "Update Customer", displayName: "Update Customer", displayOrder: 4, isActive: true, phaseId: "cmei0ofl5002yum806067ffg2" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 28: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0ofvv003fum8037gneirm", sectionNumber: "28", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "28", sectionName: "Final Inspection", displayName: "Final Inspection", displayOrder: 1, isActive: true, phaseId: "cmei0ofvv003fum8037gneirm" }, create: { sectionNumber: "28", sectionName: "Final Inspection", displayName: "Final Inspection", displayOrder: 1, isActive: true, phaseId: "cmei0ofvv003fum8037gneirm" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 29: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0ofvv003fum8037gneirm", sectionNumber: "29", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "29", sectionName: "Financial Processing", displayName: "Financial Processing", displayOrder: 2, isActive: true, phaseId: "cmei0ofvv003fum8037gneirm" }, create: { sectionNumber: "29", sectionName: "Financial Processing", displayName: "Financial Processing", displayOrder: 2, isActive: true, phaseId: "cmei0ofvv003fum8037gneirm" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
Row 30: Invalid `prisma.workflowSection.upsert()` invocation: { where: { phaseId: "cmei0ofvv003fum8037gneirm", sectionNumber: "30", ? id?: String, ? phaseId_sectionNumber?: WorkflowSectionPhaseIdSectionNumberCompoundUniqueInput, ? AND?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? OR?: WorkflowSectionWhereInput[], ? NOT?: WorkflowSectionWhereInput | WorkflowSectionWhereInput[], ? createdAt?: DateTimeFilter | DateTime, ? updatedAt?: DateTimeFilter | DateTime, ? sectionName?: StringFilter | String, ? displayName?: StringFilter | String, ? displayOrder?: IntFilter | Int, ? description?: StringNullableFilter | String | Null, ? isActive?: BoolFilter | Boolean, ? isCurrent?: BoolFilter | Boolean, ? version?: IntFilter | Int, ? workflowType?: EnumWorkflowTypeFilter | WorkflowType, ? projectTrackers?: ProjectWorkflowTrackerListRelationFilter, ? alerts?: WorkflowAlertListRelationFilter, ? lineItems?: WorkflowLineItemListRelationFilter, ? phase?: WorkflowPhaseScalarRelationFilter | WorkflowPhaseWhereInput }, update: { sectionNumber: "30", sectionName: "Project Closeout", displayName: "Project Closeout", displayOrder: 3, isActive: true, phaseId: "cmei0ofvv003fum8037gneirm" }, create: { sectionNumber: "30", sectionName: "Project Closeout", displayName: "Project Closeout", displayOrder: 3, isActive: true, phaseId: "cmei0ofvv003fum8037gneirm" } } Argument `where` of type WorkflowSectionWhereUniqueInput needs at least one of `id` or `phaseId_sectionNumber` arguments. Available options are listed in green.
